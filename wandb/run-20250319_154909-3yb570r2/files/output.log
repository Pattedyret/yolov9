Traceback (most recent call last):
  File "C:\Users\Patrick\Documents\WebutviklingRepo\yolov9\train_helper.py", line 25, in <module>
    train.main(train.parse_opt())
  File "C:\Users\Patrick\Documents\WebutviklingRepo\yolov9\train.py", line 528, in main
    train(opt.hyp, opt, device, callbacks)
  File "C:\Users\Patrick\Documents\WebutviklingRepo\yolov9\train.py", line 108, in train
    ckpt = torch.load(weights, map_location='cpu')  # load checkpoint to CPU to avoid CUDA memory leak
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Patrick\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\torch\serialization.py", line 1470, in load
    raise pickle.UnpicklingError(_get_wo_message(str(e))) from None
_pickle.UnpicklingError: Weights only load failed. This file can still be loaded, to do so you have two options, [1mdo those steps only if you trust the source of the checkpoint[0m.
	(1) In PyTorch 2.6, we changed the default value of the `weights_only` argument in `torch.load` from `False` to `True`. Re-running `torch.load` with `weights_only` set to `False` will likely succeed, but it can result in arbitrary code execution. Do it only if you got the file from a trusted source.
	(2) Alternatively, to load with `weights_only=True` please check the recommended steps in the following error message.
	WeightsUnpickler error: Unsupported global: GLOBAL torch.nn.modules.linear.Identity was not an allowed global by default. Please use `torch.serialization.add_safe_globals([Identity])` or the `torch.serialization.safe_globals([Identity])` context manager to allowlist this global if you trust this class/function.

Check the documentation of torch.load to learn more about types accepted by default with weights_only https://pytorch.org/docs/stable/generated/torch.load.html.
